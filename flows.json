[
    {
        "id": "74e0880a.c777f8",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e26c53af.cca2b",
        "type": "serial in",
        "z": "74e0880a.c777f8",
        "name": "",
        "serial": "58430f06.f23e4",
        "x": 137.5173568725586,
        "y": 193.7500286102295,
        "wires": [
            [
                "e45d22bf.57606",
                "b7c50e5e88dc6a71"
            ]
        ]
    },
    {
        "id": "d914ac8d.cd404",
        "type": "debug",
        "z": "74e0880a.c777f8",
        "name": "Temp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 140,
        "wires": []
    },
    {
        "id": "9f2a37c9.0d8f88",
        "type": "ui_gauge",
        "z": "74e0880a.c777f8",
        "name": "Temp",
        "group": "9776a793500c04ea",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "temp",
        "label": "units",
        "format": "{{value}} Â°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 240,
        "wires": []
    },
    {
        "id": "e45d22bf.57606",
        "type": "function",
        "z": "74e0880a.c777f8",
        "name": "Temp",
        "func": "// Create a context variable to store partial buffers if it doesn't exist\nconst bufferContext = context.get('bufferAccumulator') || Buffer.alloc(0);\nlet combinedBuffer;\n\n// Append the new buffer chunk to our existing partial buffer\nif (msg.payload instanceof Buffer) {\n    combinedBuffer = Buffer.concat([bufferContext, msg.payload]);\n} else {\n    // If payload is not a buffer (e.g., it's already a string), convert it\n    combinedBuffer = Buffer.concat([bufferContext, Buffer.from(msg.payload.toString())]);\n}\n\n// Check if we have a complete message (ending with newline)\nconst newlineIndex = combinedBuffer.indexOf(10); // 10 is ASCII for \\n\n\nif (newlineIndex !== -1) {\n    // We have at least one complete message\n    const completeMessage = combinedBuffer.slice(0, newlineIndex).toString().trim();\n    \n    // Store any remaining data for next time\n    context.set('bufferAccumulator', combinedBuffer.slice(newlineIndex + 1));\n    \n    // Convert to float\n    const value = parseFloat(completeMessage);\n    \n    // Return only if we have a valid number\n    if (!isNaN(value)) {\n        return { payload: value };\n    }\n} else {\n    // No complete message yet, store what we have for next time\n    context.set('bufferAccumulator', combinedBuffer);\n}\n\n// Return null if we don't have a complete valid message\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 180,
        "wires": [
            [
                "d914ac8d.cd404",
                "9f2a37c9.0d8f88"
            ]
        ]
    },
    {
        "id": "b7c50e5e88dc6a71",
        "type": "debug",
        "z": "74e0880a.c777f8",
        "name": "serial",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 420,
        "wires": []
    },
    {
        "id": "824a196803b221e4",
        "type": "ui_spacer",
        "z": "74e0880a.c777f8",
        "name": "spacer",
        "group": "6e059d92574cbc9e",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae3627405fb7078b",
        "type": "ui_spacer",
        "z": "74e0880a.c777f8",
        "name": "spacer",
        "group": "6e059d92574cbc9e",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "58430f06.f23e4",
        "type": "serial-port",
        "name": "",
        "serialport": "COM7",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "0",
        "bin": "bin",
        "out": "time",
        "addchar": "false",
        "responsetimeout": ""
    },
    {
        "id": "9776a793500c04ea",
        "type": "ui_group",
        "name": "DHT11",
        "tab": "cede9967c03f61f1",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e059d92574cbc9e",
        "type": "ui_group",
        "d": true,
        "name": "Group 1",
        "tab": "d29538b4.e12ea8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cede9967c03f61f1",
        "type": "ui_tab",
        "name": "Humidity/temperature",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d29538b4.e12ea8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]